openapi: 3.0.3
info:
  title: Player and Team API
  description: API for managing player and team information
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /players:
    get:
      summary: Get all players
      responses:
        '200':
          description: A list of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
    post:
      summary: Add a new player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerInput'
      responses:
        '201':
          description: The created player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
  /players/{id}:
    get:
      summary: Get player by ID
      parameters:
        - $ref: '#/components/schemas/Player'
      responses:
        '200':
          description: The player with the specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          description: Player not found
    put:
      summary: Update player by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerInput'
      responses:
        '200':
          description: The updated player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          description: Player not found
    delete:
      summary: Delete player by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Player deleted successfully
        '404':
          description: Player not found
  /teams:
    get:
      summary: Get all teams
      responses:
        '200':
          description: A list of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      summary: Add a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamInput'
      responses:
        '201':
          description: The created team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /teams/{id}:
    get:
      summary: Get team by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The team with the specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Team not found
    put:
      summary: Update team by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamInput'
      responses:
        '200':
          description: The updated team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Team not found
    delete:
      summary: Delete team by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Team deleted successfully
        '404':
          description: Team not found
components:
  schemas:
    Player:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the player
        name:
          type: string
          description: The name of the player
        age:
          type: integer
          format: int32
          description: The age of the player
    PlayerInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the player
        age:
          type: integer
          format: int32
          description: The age of the player
      required:
        - name
        - age
    Team:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the team
        name:
          type: string
          description: The name of the team
        listPlayer:
          type: array
          items:
            $ref: '#/components/schemas/Player'
          description: The list of players in the team
    TeamInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the team
        listPlayer:
          type: array
          items:
            type: string
            format: uuid
          description: The list of player IDs in the team
      required:
        - name
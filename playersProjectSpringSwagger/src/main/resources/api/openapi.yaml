openapi: 3.0.3
info:
  title: Player API
  description: API for managing player information
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /players:
    get:
      summary: Get all players
      operationId: getAllPlayers
      responses:
        '200':
          description: A list of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerResponse'
    post:
      summary: Add a new player
      operationId: addPlayer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerRequest'
      responses:
        '201':
          description: The created player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerResponse'
  /players/{id}:
    get:
      summary: Get player by ID
      operationId: getPlayerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The player with the specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerResponse'
        '404':
          description: Player not found
    put:
      summary: Update player by ID
      operationId: updatePlayer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerRequest'
      responses:
        '200':
          description: The updated player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerResponse'
        '404':
          description: Player not found
    delete:
      summary: Delete player by ID
      operationId: deletePlayer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Player deleted successfully
        '404':
          description: Player not found
components:
  schemas:
    PlayerRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int32
        growth:
          type: integer
          format: int32
        position:
          $ref: '#/components/schemas/PlayerPosition'
    PlayerResponse:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int32
        position:
          $ref: '#/components/schemas/PlayerPosition'
    PlayerPosition:
      type: string
      enum:
        - PLAYMAKER
        - CENTER
        - WINGER